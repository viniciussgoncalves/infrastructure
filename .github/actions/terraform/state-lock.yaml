name: Terraform State Lock

on:
  workflow_dispatch:
    inputs:
      lock_id:
        description: "Terraform lock ID"
        required: true
        type: string
      TERRAFORM_VERSION:
        description: "Terraform version"
        required: true
        type: string
      WORKING_DIRECTORY:
        description: "Working directory"
        required: true
        type: string
    secrets:
      TF_PVE_PROVIDER_ENDPOINT:
        description: "PVE provider endpoint"
        required: true
      TF_PVE_PROVIDER_API_TOKEN:
        description: "PVE provider API token"
        required: true
      AWS_ACCESS_KEY_ID:
        description: "AWS access key ID"
        required: true
      AWS_SECRET_ACCESS_KEY:
        description: "AWS secret access key"
        required: true
      AWS_ENDPOINT_URL_S3:
        description: "AWS endpoint URL for S3"
        required: true
    env:
      TERRAFORM_VERSION:
        description: "Terraform version"
        required: true
      WORKING_DIRECTORY:
        description: "Working directory"
        required: true

jobs:
  terraform-unlock:
    name: Terraform State Lock
    runs-on: ubuntu-latest
    timeout-minutes: 5

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_ENDPOINT_URL_S3: ${{ secrets.AWS_ENDPOINT_URL_S3 }}
      TERRAFORM_VERSION: ${{ env.TERRAFORM_VERSION }}
      WORKING_DIRECTORY: ${{ env.WORKING_DIRECTORY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform Init
        run: terraform init -no-color
        working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: Terraform State Lock
        run: terraform force-unlock -force -no-color ${{ github.event.inputs.lock_id }}
        working-directory: ${{ env.WORKING_DIRECTORY }}

